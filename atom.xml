<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亦初丨星空灬</title>
  
  <subtitle>To strive, to seek, to find, and not to yield.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://deaningo.github.io/"/>
  <updated>2020-01-10T08:52:14.591Z</updated>
  <id>https://deaningo.github.io/</id>
  
  <author>
    <name>亦初</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="https://deaningo.github.io/2019/07/13/markdownuse.html/"/>
    <id>https://deaningo.github.io/2019/07/13/markdownuse.html/</id>
    <published>2019-07-13T12:46:25.000Z</published>
    <updated>2020-01-10T08:52:14.591Z</updated>
    
    <content type="html"><![CDATA[<p>MarkDown语法</p><a id="more"></a><h1 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h1><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><h3 id="1-使用-和-标记一级和二级标题"><a href="#1-使用-和-标记一级和二级标题" class="headerlink" title="1.使用 = 和 - 标记一级和二级标题"></a>1.使用 = 和 - 标记一级和二级标题</h3><blockquote><p>输入标题文字，shift + enter 另起一行， 输入两个或两个以上 “ = / - ” 。<br>    一级标题<br>    ==</p></blockquote><pre><code>二级标题--</code></pre><h3 id="2-使用-号标记"><a href="#2-使用-号标记" class="headerlink" title="2.使用 # 号标记"></a>2.使用 # 号标记</h3><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><h2 id="二、段落"><a href="#二、段落" class="headerlink" title="二、段落"></a>二、段落</h2><h3 id="1-字体"><a href="#1-字体" class="headerlink" title="1.字体"></a>1.字体</h3><pre><code>*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___</code></pre><h3 id="2-分割线"><a href="#2-分割线" class="headerlink" title="2.分割线"></a>2.分割线</h3><pre><code>在一行中用三个以上的星号、减号、底线来建立一个分隔线。***---___</code></pre><h3 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3.删除线"></a>3.删除线</h3><blockquote><p>在文字的两端加上两个波浪线 <del>~<br>    ~</del>BAIDU.COM~~</p></blockquote><h3 id="4-下划线"><a href="#4-下划线" class="headerlink" title="4.下划线"></a>4.下划线</h3><blockquote><p>可以通过 HTML 的 <u> 标签来实现<br>    <u>带下划线的内容</u><br><u>带下划线的内容</u></p></blockquote><h3 id="5-脚注"><a href="#5-脚注" class="headerlink" title="5.脚注"></a>5.脚注</h3><blockquote><p>脚注是对文本的补充说明<br>    格式： [^要注明的文本]<br>    例：<br>    需要注明的文本 [^MarkDown]。<br>    [^MarkDown]:Markdown 是一种轻量级标记语言。</p></blockquote><h2 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h2><blockquote><p>MarkDown 支持有序列表 和 无序列表</p></blockquote><h3 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h3><blockquote><p>无序列表使用星号(*****)、加号(+)或是减号(-)作为列表标记<br>    * 星号<br>    + 加号<br>    - 减号</p></blockquote><h3 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h3><blockquote><p>有序列表使用数字并加上 . 号来表示<br>    1. 第一项<br>    2. 第二项</p></blockquote><h3 id="3-列表嵌套"><a href="#3-列表嵌套" class="headerlink" title="3.列表嵌套"></a>3.列表嵌套</h3><blockquote><p>列表嵌套只需在子列表中的选项添加四个空格即可<br>    1.parent1<br>        +p1-child1<br>        +p1-child2<br>    2.parent2<br>        -p2-child1<br>        -p2-child2</p></blockquote><h2 id="四、区块"><a href="#四、区块" class="headerlink" title="四、区块"></a>四、区块</h2><h3 id="1-简单使用"><a href="#1-简单使用" class="headerlink" title="1.简单使用"></a>1.简单使用</h3><blockquote><p>1.在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号<br>2.区块是可以嵌套的<br>MarkDown</p></blockquote><pre><code>&gt;&gt; MarkDown</code></pre><h3 id="2-区块与列表结合"><a href="#2-区块与列表结合" class="headerlink" title="2.区块与列表结合"></a>2.区块与列表结合</h3><blockquote><p>1.区块中使用列表<br>2.列表中使用区块<br>    1.区块中使用列表</p><ol><li>有序</li></ol><ul><li>无序</li></ul><ol start="2"><li>有序</li></ol><ul><li>无序</li></ul></blockquote><pre><code>2. 列表中使用区块    &gt; 区块内容    &gt;&gt; 区块内容</code></pre><h2 id="五、代码"><a href="#五、代码" class="headerlink" title="五、代码"></a>五、代码</h2><h3 id="1-段落中的代码"><a href="#1-段落中的代码" class="headerlink" title="1.段落中的代码"></a>1.段落中的代码</h3><blockquote><p>用反引号把它包起来（<code>）</code>Markdown` 是一种轻量级标记语言。</p></blockquote><h3 id="2-代码块"><a href="#2-代码块" class="headerlink" title="2.代码块"></a>2.代码块</h3><blockquote><p>1.使用 4 个空格或者一个制表符（Tab 键）<br>2.用 <code>包裹一段代码，并指定一种语言（也可以不指定）    ​</code>markdown<br>    Markdown是一种轻量级标记语言。<br>    ​```<br>显示：<br>    Markdown是一种轻量级标记语言。</p></blockquote><h2 id="六、链接"><a href="#六、链接" class="headerlink" title="六、链接"></a>六、链接</h2><h3 id="1-简单使用-1"><a href="#1-简单使用-1" class="headerlink" title="1.简单使用"></a>1.简单使用</h3><pre><code>[链接名称](链接地址)或者&lt;链接地址&gt;// 例：[百度](www.baidu.com)&lt;www.baidu.com&gt;</code></pre><h3 id="2-高级链接"><a href="#2-高级链接" class="headerlink" title="2.高级链接"></a>2.高级链接</h3><blockquote><p>链接也可以用变量来代替，文档末尾附带变量地址<br>    百度[百度][1]<br>    教育宝[教育宝][jyb]</p></blockquote><pre><code>[1]:www.baidu.con[jyb]:https://www.jiaoyubao.cn/</code></pre><h2 id="七、图片"><a href="#七、图片" class="headerlink" title="七、图片"></a>七、图片</h2><h3 id="1-简单使用-2"><a href="#1-简单使用-2" class="headerlink" title="1.简单使用"></a>1.简单使用</h3><pre><code>// 注：使用时去掉括号“()”前面的空格![alt 属性文本]  (图片地址)![alt 属性文本]  (图片地址 &quot;可选标题&quot;)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MarkDown语法&lt;/p&gt;
    
    </summary>
    
    
      <category term="MarkDown" scheme="https://deaningo.github.io/categories/MarkDown/"/>
    
    
      <category term="MarkDown" scheme="https://deaningo.github.io/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>如何快速读懂JavaWeb项目源代码</title>
    <link href="https://deaningo.github.io/2019/07/13/readjava.html/"/>
    <id>https://deaningo.github.io/2019/07/13/readjava.html/</id>
    <published>2019-07-13T12:46:25.000Z</published>
    <updated>2020-01-14T09:18:35.503Z</updated>
    
    <content type="html"><![CDATA[<p>如何快速读懂JavaWeb项目源代码</p><a id="more"></a><h2 id="一：学会如何读一个JavaWeb项目源代码"><a href="#一：学会如何读一个JavaWeb项目源代码" class="headerlink" title="一：学会如何读一个JavaWeb项目源代码"></a>一：学会如何读一个JavaWeb项目源代码</h2><p>步骤：表结构-&gt;web.xml-&gt;mvc-&gt;db-&gt;spring ioc-&gt;log-&gt;代码<br>　　1、先了解项目数据库的表结构，这个方面是最容易忘记的，有时候我们只顾着看每一个方法是怎么进行的，却没有去了解数据库之间的主外键关联。其实如果先了解数据库表结构，再去看一个方法的实现会更加容易。<br>　　2、然后需要过一遍web.xml，知道项目中用到了什么拦截器，监听器，过滤器，拥有哪些配置文件。如果是拦截器，一般负责过滤请求，进行AOP等；如果是监听器，可能是定时任务，初始化任务；配置文件有如 使用了spring后的读取mvc相关，db相关，service相关，aop相关的文件。<br>　　3、查看拦截器，监听器代码，知道拦截了什么请求，这个类完成了怎样的工作。有的人就是因为缺少了这一步，自己写了一个action，配置文件也没有写错，但是却怎么调试也无法进入这个action，直到别人告诉他，请求被拦截了。<br>　　4、接下来，看配置文件，首先一定是mvc相关的，如springmvc中，要请求哪些请求是静态资源，使用了哪些view策略，controller注解放在哪个包下等。然后是db相关配置文件，看使用了什么数据库，使用了什么orm框架，是否开启了二级缓存，使用哪种产品作为二级缓存，事务管理的处理，需要扫描的实体类放在什么位置。最后是spring核心的ioc功能相关的配置文件，知道接口与具体类的注入大致是怎样的。当然还有一些如apectj等的配置文件，也是在这个步骤中完成<br>　　5、log相关文件，日志的各个级别是如何处理的，在哪些地方使用了log记录日志<br>　　6、从上面几点后知道了整个开源项目的整体框架，阅读每个方法就不再那么难了。<br>　　7、当然如果有项目配套的开发文档也是要阅读的。</p><h2 id="二：爬虫是如何实现的："><a href="#二：爬虫是如何实现的：" class="headerlink" title="二：爬虫是如何实现的："></a>二：爬虫是如何实现的：</h2><p>获取规则url(正则表达式) -&gt; 模拟请求（如httpclient get请求）-&gt; 获取列表页html -&gt; 获取信息页 -&gt; 发送请求 -&gt; 信息页html -&gt; 根据规则截取相应的字段信息 -&gt; 对字段进行清理(如图片压缩) -&gt; 静态化(存储到数据库)</p><h2 id="三：架构文档"><a href="#三：架构文档" class="headerlink" title="三：架构文档"></a>三：架构文档</h2><p>开发项目是需要学会写架构文档，而不是只是做一个码农<br>包含以下内容：<br>　　1、模块分级，各模块关系，各模块负责人<br>　　2、各模块时序图<br>　　3、各模块表结构<br>　　4、协议文档(接口文档)<br>　　5、每个负责人工作计划<br>下发任务后每个模块的负责人用开发工具画出自己的时序图，表结构和接口文档，最后汇总到总项目负责人处。</p><h2 id="四：其它"><a href="#四：其它" class="headerlink" title="四：其它"></a>四：其它</h2><p>　　1、数据库是否分表问题：用分表的方式管理表有时并不合理，如果读的压力高是不值得的，可能更慢。如果写并发高就行（以千万级别为准）。 读是按缓存的，缓存密度在95%以上是比较保险的。读的优化：读单条信息，只需搜到这个id，然后直接从缓存中拿，缓存用id做缓存，查id的效率是很高的。<br>　　2、CMS=模板+数据:可以通过只有一套自己的模板（如用freemarker），发送请求获取json数据填入信息。CMS有模板通过把数据填入模板即形成一个网页。<br>　　3、计算机浏览器的网页内容要在手机上查看，需要做到响应式HTML。<br>　　4、如通过抓取网页内容放到app上显示，需要做的内容：图片大小自适应，内容尽量保真，校验内容是否丢失，链接需要替换的需要进行替换，html标签替换<br>　　5、爬虫的核心是多线程的任务管理，抓取分页列表内容。<br>　　6、微信公众号上是如何绑定用户让用户只登录一次，下次不用登陆？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何快速读懂JavaWeb项目源代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://deaningo.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://deaningo.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>竞价单页订单管理系统</title>
    <link href="https://deaningo.github.io/2019/07/13/order.html/"/>
    <id>https://deaningo.github.io/2019/07/13/order.html/</id>
    <published>2019-07-13T12:46:25.000Z</published>
    <updated>2020-01-14T08:57:54.062Z</updated>
    
    <content type="html"><![CDATA[<p>竞价单页订单管理系统</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;竞价单页订单管理系统&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目总结" scheme="https://deaningo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="项目总结，订单管理系统" scheme="https://deaningo.github.io/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%EF%BC%8C%E8%AE%A2%E5%8D%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>旅途中的生活</title>
    <link href="https://deaningo.github.io/2019/04/24/life.html/"/>
    <id>https://deaningo.github.io/2019/04/24/life.html/</id>
    <published>2019-04-24T07:40:24.000Z</published>
    <updated>2020-01-14T08:35:34.341Z</updated>
    
    <content type="html"><![CDATA[<p>　　人这一生如同一次旅程，在前行中看风景，在过程中享受快乐。如何把握行程的节奏，让旅行的过程更完美，需要做好规划和调整，需要智慧和勤奋，需要总结和反思，需要舍弃和保留，需要目标，需要学习，需要激情，需要挑战，同样需要有一颗正确面对生活的平常心。<a id="more"></a></p><p>　　有时旅行途中累了，就要歇歇脚，放慢脚步，看看周围的风景，关注一下别人前行的脚步，这也是一种享受；有时精力充沛，信心十足，迎难而上，百米冲刺，实现质的飞跃，到达胜利的顶峰，感受高处不胜寒的愉悦，再苦再累也心甘情愿。这种调整人生旅程同样需要，有时需要商海拼打，官场争位，有时需要隐居山林，修身养性；有时只争朝夕，有时闲庭漫步；过惯了富人的生活，就需要过平常人的生活，感受一下生活的真实。</p><p>　　人生需要学习，需要充电。通过学习培训提高自己的工作技能和知识水平，就和旅途需要喝点水，吃点西一样，补充一下体能，积蓄一点能量，以便进行下一步的攀登，上一个台阶，看更美的风景，实现下一个目标。</p><p>　　人生需要反思，需要总结经验。谈谈感受，和同行者交流，可以使你少走弯路，攀登的过程也是有技巧的，吸取别人的经验，顺着别人踏出的小径走下去，你会感觉走的很顺畅，你会发现在旅途中永远不会迷失方向，因为这条小径是多少人曾经走过的，它是前行者在探索、失败中走出来的，这就如同我们从书本中汲取知识一样，我们不必要再去发现牛顿定律，不必再去重新探索能量守恒，只要掌握定理就行。</p><p>　　人生需要丢弃。丢弃不愉快的东西，保留美好的回忆，就如同旅途中要经常整理你的背囊一样，把该吃的吃点，该喝的喝点，空瓶废物丢进垃圾筒，减轻负担，轻装上阵，这样你就会进步的更快；丢弃不需要的东西，合并能合并的物件，尽量让你的背囊实用而不繁琐，美观而有内容，人生就会多一份轻松愉快，多一份笑口常开。</p><p>　　人生需要挑战。有时我们有了激情，会突发奇想，另辟溪径，想要看更好的风景，就需要大胆创新，需要做好失败和重新再来的准备，前行的道路充满了不确定因素，挑战与机遇并行，失败与成功同存，不历经艰辛不会看到比别人更精彩的风景。换一种活法，换一种思维，不断消除你的视角和感观疲劳，激发你的激情和潜能，你的生活或许更精彩，前进路上会别有一番洞天。</p><p>　　人生需要目标。虽然过程很重要，但是过程是因为目标而存在的，我们去旅游或是去爬山，总会为自己设定一个目标，比如要看到哪个风景爬到哪个山顶，由此才有过程的攀登和探索，人生同样要为自己设定目标，这样才会有方向，才会有努力的动力，人生就是不断实现目标和克服困难的过程，坐在功劳薄上停滞不前，你只会被社会所淘汰，没有目标、没有追求你就会停滞不前，碌碌无为，得过宜过，昏昏噩噩，你就不会有过程的多彩，你的生活也不会有有章有节的华丽，可圈可点的精彩。</p><p>　　人生需要有一颗平常心。旅途需要心平气和，这样你才能感受风景带给你的快乐，你才会玩的快乐轻松，一步一步走，一处一处看，你才会走的踏实，走出精彩，身累心不累，在跋涉中体会享受。人生也需要和旅行一样，需要平常心，如果有太多的计较，太多的不满，只能为你带来痛苦，比如你看到别人买车买房、别人进级晋升、看到别人发财暴富你就眼红，你就气不过，到头来只能是自己和自己过不去。生活需要有一颗平常心，努力去工作，认真去做事，相信总会有结果，问心无愧，无怨无悔，过好每一天的生活，你会感受到更多的快乐。有时你会被别人误解，有时你会得到上司莫名其妙的批评，就像生活不会永远风和日丽一样，就像月有阴晴圆缺，天有不测风云一样，挫折总是有的，不快瞬间即逝，不要太在意，也不要刻意去追求，只要你努力了，目标就会一步一步向你靠近，胜利就会向你招手，你的努力终会被别人所认可，相信世界是公平的，正义是存在的，乌云不会永远遮住太阳。</p><p>　　人生如旅，看过无数风景，走过几多坎坷，经历多少艰险，留下多少故事；人生如旅，洒下无数汗水，留下许多欢笑，旅途中有快乐，有遗憾，有失败，也有欣慰和值得自豪的成功，一路走来，留下了无数美好的回忆和不堪回首的往事，但都是旅途中不可或缺的插曲；人生如旅，看过风景，经历磨难，有坦途，也有崎岖，无数风光尽在其中，每一章节都是精彩人生的一面。</p><p>　　只要你用心，只要你努力，人生旅程会走的平淡而精彩，平凡而有意义。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　人这一生如同一次旅程，在前行中看风景，在过程中享受快乐。如何把握行程的节奏，让旅行的过程更完美，需要做好规划和调整，需要智慧和勤奋，需要总结和反思，需要舍弃和保留，需要目标，需要学习，需要激情，需要挑战，同样需要有一颗正确面对生活的平常心。
    
    </summary>
    
    
      <category term="生活" scheme="https://deaningo.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="https://deaningo.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
